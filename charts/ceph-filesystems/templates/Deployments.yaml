---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: media
  name: ceph-mounts
  labels:
    app: ceph-mounts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ceph-mounts
  template:
    metadata:
      labels:
        app: ceph-mounts
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: rsync-tv
          image: instrumentisto/rsync-ssh
          command:
          - rsync
          - -rav
          - --stats
          - --chown=1000:1000
          - /nfs-ocean/complete/tv/
          - /tv
          imagePullPolicy: IfNotPresent
          tty: true
          securityContext:
            runAsNonRoot: false
          volumeMounts:
          - name: nfs-ocean
            mountPath: /nfs-ocean
          {{- range .Values.persistentVolumeClaims }}
          - name: {{ .name}}
            mountPath: /{{ .name}}
          {{- end }}
        - name: rsync-movies
          image: instrumentisto/rsync-ssh
          command:
          - rsync
          - -rav
          - --stats
          - --chown=1000:1000
          - /nfs-ocean/complete/movies/
          - /movies
          imagePullPolicy: IfNotPresent
          tty: true
          securityContext:
            runAsNonRoot: false
          volumeMounts:
          - name: nfs-ocean
            mountPath: /nfs-ocean
          {{- range .Values.persistentVolumeClaims }}
          - name: {{ .name}}
            mountPath: /{{ .name}}
          {{- end }}
        - name: ubuntu
          image: ubuntu:latest
          command: ['sh', '-c', 'sleep 3600']
          imagePullPolicy: IfNotPresent
          tty: true
          securityContext:
            runAsNonRoot: false
          volumeMounts:
          - name: nfs-ocean
            mountPath: /nfs-ocean
          {{- range .Values.persistentVolumeClaims }}
          - name: {{ .name}}
            mountPath: /{{ .name}}
          {{- end }}
      volumes:
      {{- range .Values.persistentVolumeClaims }}
      - name: {{ .name}}
        persistentVolumeClaim:
          claimName: {{ .name }}
          readOnly: false
      {{- end }}
      - name: nfs-ocean
        persistentVolumeClaim:
          claimName: nfs-ocean-pvc
          readOnly: false
      # - name: mon-endpoint-volume
      #   configMap:
      #     name: rook-ceph-mon-endpoints
      #     items:
      #       - key: data
      #         path: mon-endpoints
      # - name: ceph-config
      #   emptyDir: {}
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ceph-tools
#   labels:
#     app: ceph-tools
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ceph-tools
#   template:
#     metadata:
#       labels:
#         app: ceph-tools
#     spec:
#       dnsPolicy: ClusterFirstWithHostNet
#       containers:
#         - name: ceph-tools
#           image: rook/ceph:master
#           command: ["/bin/bash"]
#           args: ["-m", "-c", "/usr/local/bin/toolbox.sh"]
#           imagePullPolicy: IfNotPresent
#           tty: true
#           securityContext:
#             runAsNonRoot: true
#             runAsUser: 2016
#             runAsGroup: 2016
#           env:
#             - name: ROOK_CEPH_USERNAME
#               valueFrom:
#                 secretKeyRef:
#                   name: rook-ceph-mon
#                   key: ceph-username
#             - name: ROOK_CEPH_SECRET
#               valueFrom:
#                 secretKeyRef:
#                   name: rook-ceph-mon
#                   key: ceph-secret
#           volumeMounts:
#           - mountPath: /etc/ceph
#             name: ceph-config
#           - name: mon-endpoint-volume
#             mountPath: /etc/rook
#       volumes:
#       - name: mon-endpoint-volume
#         configMap:
#           name: rook-ceph-mon-endpoints
#           items:
#             - key: data
#               path: mon-endpoints
#       - name: ceph-config
#         emptyDir: {}
