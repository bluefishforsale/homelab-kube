plex:
  # IMPORTANT NOTE
  #
  # This chart inherits from our common library chart. You can check the default values/options here:
  # https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
  #

  image:
    # -- image repository
    repository: ghcr.io/k8s-at-home/plex
  # @default -- chart.appVersion
    tag:
    # -- image pull policy
    pullPolicy: Always

  # -- environment variables. See [plex docs](https://support.plex.tv/articles/201105343-advanced-hidden-server-settings/) for more details.
  # **NOTE:** Plex preference options are camelCase and CASE SENSITIVE!
  # You can do horrible things to your Plex configuration if you are not careful
  # @default -- See below
  env:
    TZ: America/Los_Angeles
    ADVERTISE_IP: http://plex.svc.cluster.local
    PLEX_CLAIM:
      valueFrom:
        secretKeyRef:
          name: plex-claim
          key: plex-claim
    PLEX_MEDIA_SERVER_USE_SYSLOG: false
    NVIDIA_VISIBLE_DEVICES: all
    NVIDIA_DRIVER_CAPABILITIES: compute,video,utility
    # ALLOWED_NETWORKS:
    PLEX_PREFERENCE_1: "FriendlyName=MegaPlex"
    PLEX_PREFERENCE_2: "EnableIPv6=0"
    PLEX_PREFERENCE_3: "logDebug=0"
    PLEX_PREFERENCE_4: "DisableTLSv1_0=1"
    # PLEX_PREFERENCE_5: "LanNetworksBandwidth=xxx.xxx.xxx.0/18\,xxx.xxx.xxx.0/24\,xxx.xxx.xxx.0/24"
    PLEX_PREFERENCE_6: "TranscoderQuality=2"
    PLEX_PREFERENCE_7: "TreatWanIpAsLocal=0"
    PLEX_PREFERENCE_8: "TranscoderH264BackgroundPreset=fast"

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      primary: true
      ports:
        http:
          port: 32400
    dnla-tcp:
      enabled: false
      type: NodePort
      ports:
        dnla-tcp:
          enabled: true
          port: 32469
          protocol: TCP
          targetPort: 32469
      externalTrafficPolicy: Local
    dnla-udp:
      enabled: false
      type: NodePort
      ports:
        dnla-udp:
          enabled: true
          port: 1900
          protocol: TCP
          targetPort: 1900
      externalTrafficPolicy: Local

  ingress:
    main:
      # -- Enable an ingress for the code-server add-on.
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      labels: {}
      hosts:
        - host: home.terrac.com
          paths:
            - path: /
              pathType: Prefix
        - host: plex.svc.cluster.local
          paths:
            - path: /
              pathType: Prefix
      tls: []


  # -- Enable devices to be discoverable
  hostNetwork: false

  # -- Configure persistence settings for the chart under this key.
  # @default -- See values.yaml
  persistence:
    config:
      enabled: true
      existingClaim: plex-config
      mountPath: /config

   # logs to disk slow everything down
   # we dont really care about keeping logs between runs
   # Memory emptyDir wipes logs every run
    logs:
      enabled: true
      medium: "Memory"
      type: emptyDir
      mountPath: "/config/Library/Application Support/Plex Media Server/Logs"

    transcode:
      enabled: true
      medium: "Memory"
      type: emptyDir
      mountPath: /transcode

    tv:
      enabled: true
      existingClaim: tv
      mountPath: /tv

    movies:
      enabled: true
      existingClaim: movies
      mountPath: /movies


  # -- Configure the Security Context for the Pod
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    # # Hardware acceleration using an Intel iGPU w/ QuickSync
    # # These IDs below should be matched to your `video` and `render` group on the host
    # # To obtain those IDs run the following grep statement on the host:
    # # $ cat /etc/group | grep "video\|render"
    # # video:x:44:
    # # render:x:109:
    # supplementalGroups:
    # - 44
    # - 109

  # autoscaling:
  #   enabled: true
  #   target:  # deploymentname
  #   minReplicas:  1
  #   maxReplicas:  5
  #   targetCPUUtilizationPercentage:  90
    # targetMemoryUtilizationPercentage:  20

  # -- Configure the resource requests and/or limits for the Pod
  resources:
    requests:
    #   # Hardware acceleration using an Intel iGPU w/ QuickSync and
    #   # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
    #   gpu.intel.com/i915: 1
      cpu: 8
      memory: 4Gi
      nvidia.com/gpu: 1
    limits:
    #   # Hardware acceleration using an Intel iGPU w/ QuickSync and
    #   # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
      cpu: 32
      memory: 32Gi
      nvidia.com/gpu: 1

  tolerations:
    - key: storage-node
      operator: Exists
  affinity:
    nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            # - key: nvidia.com/gpu.present
            - key: nvidia
              operator: In
              values:
              - "true"

  addons:
    promtail:
      # -- Enable running a promtail container in the pod
      enabled: true

      image:
        # -- Specify the promtail image
        repository: grafana/promtail
        # -- Specify the promtail image tag
        tag: 2.2.0
        # -- Specify the promtail image pull policy
        pullPolicy: IfNotPresent

      # -- Set any environment variables for promtail here
      env: {}

      # -- Set promtail command line arguments
      args: []

      # -- The URL to Loki
      loki: "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"

      # -- The paths to logs on the volume
      logs:
      - name: logs
        path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"

      # -- Specify a list of volumes that get mounted in the promtail container.
      # At least 1 volumeMount is required!
      volumeMounts:
      - name: logs
        mountPath: "/config/Library/Application Support/Plex Media Server/Logs"
        readOnly: true
